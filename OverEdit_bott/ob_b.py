import telebot
from telebot import types
import sqlite3
from sqlite3 import Error

bot = telebot.TeleBot('6887025893:AAGwoLCvQDkV9xfcLm7Fej3TLbFDt_WF7Lc')

bot.videos = []
bot.current_video_index = 0
bot.current_theme = ""
bot.user_id = 0

def create_connection():
    try:
        conn = sqlite3.connect('over.db')
        return conn
    except Error as e:
        print(e)
        return None

def add_user_to_database(conn, user_id, first_name, last_name, username):
    try:
        cursor = conn.cursor()
        cursor.execute("INSERT INTO users (id, first_name, last_name, username) VALUES (?, ?, ?, ?)",
                       (user_id, first_name, last_name, username))
        conn.commit()
    except Error as e:
        print(e)

@bot.message_handler(commands=["start"])
def start(message):
    user_id = message.from_user.id
    first_name = message.from_user.first_name
    last_name = message.from_user.last_name or ''
    username = message.from_user.username or ''

    conn = create_connection()

    if conn:
        add_user_to_database(conn, user_id, first_name, last_name, username)
        conn.close()

    welcome_message = f"–ü—Ä–∏–≤–µ—Çüëãüèª, {first_name} {last_name}!\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ –∏ –∫—Ä–µ–∞—Ç–∏–≤–∞ —Å –Ω–∞—à–∏–º Telegram-–±–æ—Ç–æ–º OverEdit!" \
                      f"\n–ú—ã –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å –≤–∞–º –≤–æ–ø–ª–æ—Ç–∏—Ç—å –≤–∞—à–∏ –∏–¥–µ–∏ –≤ –∂–∏–∑–Ω—å, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—è –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –≤–∞—à–∏—Ö —Ä–µ–¥–∞–∫—Ç–æ—Ä—Å–∫–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤." \
                      f"\n–ù–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ç–æ–≥–æ, —Å–æ–∑–¥–∞–µ—Ç–µ –≤—ã –≤–∏–¥–µ–æ—Ä–æ–ª–∏–∫–∏, —Ñ–æ—Ç–æ–∫–æ–ª–ª–∞–∂–∏ –∏–ª–∏ –¥—Ä—É–≥–∏–µ —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç—ã, –º—ã –∑–¥–µ—Å—å, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –≤–∞—à –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—â–µ –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–º."

    markup = types.InlineKeyboardMarkup()
    button1 = types.InlineKeyboardButton("–ü–æ–º–æ—â—å‚ùì", callback_data='help')
    button2 = types.InlineKeyboardButton("–ö–∞—Ç–µ–≥–æ—Ä–∏–∏üìã", callback_data='categories')
    button3 = types.InlineKeyboardButton("–ò–∑–±—Ä–∞–Ω–Ω–æ–µ‚ù§", callback_data='suggestion')

    markup.row(button1, button2, button3)

    bot.send_message(message.chat.id, welcome_message, reply_markup=markup)

#------------------------------------------------------#     
#               –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫               #            
#------------------------------------------------------#  
@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    if call.data == 'help':
        markup = create_back_keyboard()
        bot.send_message(call.message.chat.id, "–í—ã –≤—ã–±—Ä–∞–ª–∏ –ü–æ–º–æ—â—å‚ùì \n‚ú¶ –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –ö–∞—Ç–µ–≥–æ—Ä–∏–∏üìã"\
                         f"\n‚ú¶ –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –≤–∏–¥–µ–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–í–ø–µ—Ä–µ–¥'"\
                         f"\n‚ú¶ –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –≤–∏–¥–µ–æ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ù–∞–∑–∞–¥'"\
                         f"\n‚ú¶ –ï—Å–ª–∏ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å –¥–∞–Ω–Ω–æ–µ –≤–∏–¥–µ–æ –∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –µ–≥–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ'"
                         f"\n‚ú¶ –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –≤–∏–¥–µ–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –ò–∑–±—Ä–∞–Ω–Ω–æ–µ‚ù§",
                         reply_markup=markup)
        bot.answer_callback_query(call.id, text="", show_alert=False)


    elif call.data == 'Back':
        start(call.message)     
        bot.answer_callback_query(call.id, text="", show_alert=False)

    elif call.data == 'categories':

        inline_markup = types.InlineKeyboardMarkup()
        button_video = types.InlineKeyboardButton("–í–∏–¥–µ–æüéûÔ∏è", callback_data='Video')
        button_back = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='Back')
        
        inline_markup.row(button_video)
        inline_markup.row(button_back)

        bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ–≤–µ—Ä–ª–µ—è.", reply_markup=inline_markup)
        bot.answer_callback_query(callback_query_id=call.id, show_alert=False)


    elif call.data == 'Video':
        inline_markup = types.InlineKeyboardMarkup()
        button_theme1 = types.InlineKeyboardButton("–ë–∞–±–æ—á–∫–∏ü¶ã", callback_data='Theme1')
        button_theme2 = types.InlineKeyboardButton("–ó–≤–µ–∑–¥—ã‚ú®", callback_data='Theme2')
        button_theme3 = types.InlineKeyboardButton("–§–æ–Ωüåå", callback_data='Theme3')
        button_back_to_categories = types.InlineKeyboardButton("–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", callback_data='BackToCategories')

        inline_markup.row(button_theme1, button_theme2, button_theme3)
        inline_markup.row(button_back_to_categories)

        bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º–∞—Ç–∏–∫—É –æ–≤–µ—Ä–ª–µ—è.", reply_markup=inline_markup)
        bot.answer_callback_query(callback_query_id=call.id, show_alert=False)
        

    elif call.data == 'Video_f':
        inline_markup = types.InlineKeyboardMarkup()
        button_theme1 = types.InlineKeyboardButton("–ë–∞–±–æ—á–∫–∏ü¶ã", callback_data='Theme1_f')
        button_theme2 = types.InlineKeyboardButton("–ó–≤–µ–∑–¥—ã‚ú®", callback_data='Theme2_f')
        button_theme3 = types.InlineKeyboardButton("–§–æ–Ωüåå", callback_data='Theme3_f')
        button_back_to_categories = types.InlineKeyboardButton("–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", callback_data='BackToCategories')

        inline_markup.row(button_theme1, button_theme2, button_theme3)
        inline_markup.row(button_back_to_categories)

        bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º–∞—Ç–∏–∫—É –æ–≤–µ—Ä–ª–µ—è.", reply_markup=inline_markup)
        bot.answer_callback_query(callback_query_id=call.id, show_alert=False)

    elif call.data == 'BackToCategories':
        inline_markup = types.InlineKeyboardMarkup()
        button_video = types.InlineKeyboardButton("–í–∏–¥–µ–æüéûÔ∏è", callback_data='Video')
        button_back = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='Back')

        inline_markup.row(button_video)
        inline_markup.row(button_back)

        bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ–≤–µ—Ä–ª–µ—è.", reply_markup=inline_markup)
        bot.answer_callback_query(callback_query_id=call.id, show_alert=False)

#---------------------------------------------------------------------------------#     
#               –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"               #            
#---------------------------------------------------------------------------------# 
    elif call.data == 'BackToTheme':
        inline_markup = types.InlineKeyboardMarkup()
        button_theme1 = types.InlineKeyboardButton("–ë–∞–±–æ—á–∫–∏ü¶ã", callback_data='Theme1')
        button_theme2 = types.InlineKeyboardButton("–ó–≤–µ–∑–¥—ã‚ú®", callback_data='Theme2')
        button_theme3 = types.InlineKeyboardButton("–§–æ–Ωüåå", callback_data='Theme3')
        button_back_to_categories = types.InlineKeyboardButton("–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", callback_data='BackToCategories')

        inline_markup.row(button_theme1, button_theme2, button_theme3)
        inline_markup.row(button_back_to_categories)

        bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º–∞—Ç–∏–∫—É –æ–≤–µ—Ä–ª–µ—è.", reply_markup=inline_markup)
        bot.answer_callback_query(callback_query_id=call.id, show_alert=False)


    elif call.data == 'NextVideo':
        if len(bot.videos) > 0:
            bot.current_video_index = (bot.current_video_index + 1) % len(bot.videos)
            markup = create_back_to_theme_keyboard()
            markup.add(types.InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ", callback_data='AddToFavorites'))
            send_video(call.message.chat.id, bot.videos[bot.current_video_index][1], markup,
                        bot.current_theme, bot.user_id, call.message.message_id)
            bot.answer_callback_query(call.id, text="", show_alert=False)

    elif call.data == 'PrevVideo':
        if len(bot.videos) > 0:
            bot.current_video_index = (bot.current_video_index - 1) % len(bot.videos)
            send_video(call.message.chat.id, bot.videos[bot.current_video_index][1], create_back_to_theme_keyboard_FAW(),
                        bot.current_theme, bot.user_id, call.message.message_id)
            bot.answer_callback_query(call.id, text="", show_alert=False)

    elif call.data == 'NextVideo_f':
        if len(bot.videos) > 0:
            bot.current_video_index = (bot.current_video_index + 1) % len(bot.videos)
            markup = create_back_to_theme_keyboard_FAW()
            send_video(call.message.chat.id, bot.videos[bot.current_video_index][1], markup,
                        bot.current_theme, bot.user_id, call.message.message_id)
            bot.answer_callback_query(call.id, text="", show_alert=False)

    elif call.data == 'PrevVideo_f':
        if len(bot.videos) > 0:
            bot.current_video_index = (bot.current_video_index - 1) % len(bot.videos)
            send_video(call.message.chat.id, bot.videos[bot.current_video_index][1], create_back_to_theme_keyboard_FAW(),
                        bot.current_theme, bot.user_id, call.message.message_id)
            bot.answer_callback_query(call.id, text="", show_alert=False)
 
#-----------------------------------------------------------------------#     
#              –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ"          #            
#-----------------------------------------------------------------------# 
    elif call.data == 'suggestion':
        markup = create_favorite_keyboard_MENU2()
        bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –æ–≤–µ—Ä–ª–µ—è", reply_markup=markup)
        bot.answer_callback_query(callback_query_id=call.id, show_alert=False)
                    
#--------------------------------------------------------------#     
#              –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ë–∞–±–æ—á–∫–∏"              #            
#--------------------------------------------------------------# 
    elif call.data == 'Theme1':
        conn = create_connection()

        if conn:
            try:
                cursor = conn.cursor()
                cursor.execute("SELECT id, file_url FROM overlays WHERE theme = 'Butterflies' AND type = 'video'")
                videos = cursor.fetchall()

                if videos:
                    bot.videos = videos
                    bot.current_theme = 'Butterflies'
                    markup = create_back_to_theme_keyboard()
                    markup.add(types.InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ", callback_data='AddToFavorites'))
                    send_video(call.message.chat.id, bot.videos[bot.current_video_index][1], markup)
                    bot.answer_callback_query(call.id, text="", show_alert=False)
            finally:
                cursor.close()
                conn.close()


    elif call.data == 'Theme1_f':
        conn = create_connection()

        if conn:
            try:
                cursor = conn.cursor()
                cursor.execute("SELECT id, file_url FROM overlays WHERE theme = 'Butterflies' AND type = 'video' AND favorite = 1")
                videos = cursor.fetchall()

                if videos:
                    bot.videos = videos
                    bot.current_theme = 'Butterflies'
                    markup = create_back_to_theme_keyboard_FAW()
                    send_video(call.message.chat.id, bot.videos[bot.current_video_index][1], markup)
                    bot.answer_callback_query(call.id, text="", show_alert=False)
                else:
                    bot.send_message(call.message.chat.id, "–ù–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ —Å —Ç–µ–º–æ–π '–ë–∞–±–æ—á–∫–∏'")
            finally:
                cursor.close()
                conn.close()

#-----------------------------------------------#     
#       –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ó–≤–µ–∑–¥—ã"       #                     
#-----------------------------------------------#  

    elif call.data == 'Theme2':
        conn = create_connection()

        if conn:
            try:
                cursor = conn.cursor()
                cursor.execute("SELECT id, file_url FROM overlays WHERE theme = 'Sparkles' AND type = 'video'")
                videos = cursor.fetchall()

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤–∏–¥–µ–æ
                if videos:

                    bot.videos = videos
                    bot.current_theme = 'Sparkles'
                    markup = create_back_to_theme_keyboard()
                    markup.add(types.InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ", callback_data='AddToFavorites'))
                    send_video(call.message.chat.id, bot.videos[bot.current_video_index][1], markup)
                    bot.answer_callback_query(call.id, text="", show_alert=False)
            finally:
                cursor.close()
                conn.close()

  
    elif call.data == 'Theme2_f':
        conn = create_connection()

        if conn:
            try:
                cursor = conn.cursor()
                cursor.execute("SELECT id, file_url FROM overlays WHERE theme = 'Sparkles' AND type = 'video' AND favorite = 1")
                videos = cursor.fetchall()

                if videos:

                    bot.videos = videos
                    bot.current_theme = 'Sparkles'
                    markup = create_back_to_theme_keyboard_FAW()
                    send_video(call.message.chat.id, bot.videos[bot.current_video_index][1], markup)
                    bot.answer_callback_query(call.id, text="", show_alert=False)
                else:
                    bot.send_message(call.message.chat.id, "–ù–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ —Å —Ç–µ–º–æ–π '–ë–∞–±–æ—á–∫–∏'")
            finally:
                cursor.close()
                conn.close()

#-----------------------------------------------#     
#       –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–§–æ–Ω"          #                  
#-----------------------------------------------#      
                
    elif call.data == 'Theme3':
        conn = create_connection()

        if conn:
            try:
                cursor = conn.cursor()
                cursor.execute("SELECT id, file_url FROM overlays WHERE theme = 'Background' AND type = 'video'")
                videos = cursor.fetchall()

                if videos:
                    bot.videos = videos
                    bot.current_theme = 'Background'
                    markup = create_back_to_theme_keyboard()
                    markup.add(types.InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ", callback_data='AddToFavorites'))
                    send_video(call.message.chat.id, bot.videos[bot.current_video_index][1], markup)
                    bot.answer_callback_query(call.id, text="", show_alert=False)
            finally:
                cursor.close()
                conn.close()

 
    elif call.data == 'Theme3_f':
        conn = create_connection()

        if conn:
            try:
                cursor = conn.cursor()
                cursor.execute("SELECT id, file_url FROM overlays WHERE theme = 'Background' AND type = 'video' AND favorite = 1")
                videos = cursor.fetchall()

                if videos:
                    bot.videos = videos
                    bot.current_theme = 'Background'
                    markup = create_back_to_theme_keyboard_FAW()
                    send_video(call.message.chat.id, bot.videos[bot.current_video_index][1], markup)
                    bot.answer_callback_query(call.id, text="", show_alert=False)
                else:
                    bot.send_message(call.message.chat.id, "–ù–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ —Å —Ç–µ–º–æ–π '–ë–∞–±–æ—á–∫–∏'")
            finally:
                cursor.close()
                conn.close()

 
#------------------------------------------------------#     
#     –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ"  #                         
#------------------------------------------------------#         
    elif call.data == 'AddToFavorites':
        conn = create_connection()

        if conn:
            try:
                cursor = conn.cursor()
                video_url = bot.videos[bot.current_video_index][1]
                cursor.execute("SELECT id FROM overlays WHERE file_url = ? AND favorite = 1", (video_url,))
                already_favorited = cursor.fetchone()

                if already_favorited:
                    bot.send_message(call.message.chat.id, "–≠—Ç–æ –≤–∏–¥–µ–æ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!")
                else:
                    cursor.execute("UPDATE overlays SET favorite = 1 WHERE file_url = ?", (video_url,))
                    conn.commit()
                    bot.send_message(call.message.chat.id, "–í–∏–¥–µ–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!")

                    markup = create_back_to_theme_keyboard()
                    markup.add(types.InlineKeyboardButton("–£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ", callback_data='RemoveFromFavorites'))
                    send_video(call.message.chat.id, video_url, markup, bot.current_theme, bot.user_id, call.message.message_id)
            finally:
                cursor.close()
                conn.close()

#------------------------------------------------------#     
#     –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ" #                          
#------------------------------------------------------#   
    elif call.data == 'RemoveFromFavorites':
        conn = create_connection()

        if conn:
            try:
                cursor = conn.cursor()
                video_url = bot.videos[bot.current_video_index][1]
                cursor.execute("SELECT id FROM overlays WHERE file_url = ? AND favorite = 0", (video_url,))
                already_removed = cursor.fetchone()

                if already_removed:
                    bot.send_message(call.message.chat.id, "–≠—Ç–æ –≤–∏–¥–µ–æ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ!")
                else:
                    cursor.execute("UPDATE overlays SET favorite = 0 WHERE file_url = ?", (video_url,))
                    conn.commit()
                    bot.send_message(call.message.chat.id, "–í–∏–¥–µ–æ —É–¥–∞–ª–µ–Ω–æ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ!")

                    markup = create_back_to_theme_keyboard()
                    markup.add(types.InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ", callback_data='AddToFavorites'))

                    send_video(call.message.chat.id, video_url, markup, bot.current_theme, bot.user_id, call.message.message_id)
            finally:
                cursor.close()
                conn.close()

#--------------------------------#     
#     –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ     #                      
#--------------------------------#  
def send_video(chat_id, video_url, markup, theme=None, user_id=None, message_id=None):
    caption = f"–í–∏–¥–µ–æ —Å —Ç–µ–º–æ–π {theme}" if theme else None
    
    if message_id:
        bot.edit_message_media(chat_id=chat_id, message_id=message_id,
                               media=types.InputMediaVideo(video_url, caption=caption), reply_markup=markup)
    else:
        bot.send_video(chat_id, video_url, caption=caption, reply_markup=markup)

    if user_id and theme:
        conn = create_connection()

        if conn:
            try:
                cursor = conn.cursor()
                cursor.execute("INSERT INTO user_overlays (user_id, overlay_id) VALUES (?, ?)",
                               (user_id, bot.videos[bot.current_video_index][0]))
                conn.commit()
            finally:
                cursor.close()
                conn.close()

#--------------------------------------------#     
#     –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ     #                      
#--------------------------------------------#            
def send_favorite_videos(chat_id, user_id):
    conn = create_connection()

    if conn:
        try:
            cursor = conn.cursor()

            cursor.execute("""
                SELECT o.file_url
                FROM user_overlays uo
                INNER JOIN overlays o ON uo.overlay_id = o.id
                WHERE uo.user_id = ? AND o.favorite = 1
            """, (user_id,))
            favorite_videos = cursor.fetchall()

            if favorite_videos:

                markup = create_back_to_theme_keyboard()
                markup.add(types.InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ", callback_data='AddToFavorites'))
                for video_url in favorite_videos:
                    send_video(chat_id, video_url[0], markup, "–ò–∑–±—Ä–∞–Ω–Ω–æ–µ", user_id)
            else:
                bot.send_message(chat_id, "–í –≤–∞—à–µ–º –∏–∑–±—Ä–∞–Ω–Ω–æ–º –ø–æ–∫–∞ –Ω–µ—Ç –≤–∏–¥–µ–æ.")
        finally:
            cursor.close()
            conn.close()

def create_back_keyboard():
    markup = types.InlineKeyboardMarkup()
    button4 = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='Back')
    markup.row(button4)
    return markup

def create_back_to_categories_keyboard():
    markup = types.InlineKeyboardMarkup()
    button_back_to_categories = types.InlineKeyboardButton("–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", callback_data='BackToCategories')
    markup.row(button_back_to_categories)
    return markup
 
def create_favorite_keyboard1():
    markup = types.InlineKeyboardMarkup()
    button_theme1 = types.InlineKeyboardButton("–ë–∞–±–æ—á–∫–∏ü¶ã", callback_data='Theme1_f')
    button_theme2 = types.InlineKeyboardButton("–ó–≤–µ–∑–¥—ã‚ú®", callback_data='Theme2_f')
    button_theme3 = types.InlineKeyboardButton("–§–æ–Ωüåå", callback_data='Theme3_f')
    button_back_to_categories = types.InlineKeyboardButton("–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", callback_data='BackToCategories')
    markup.row(button_theme1)
    markup.row(button_theme2)
    markup.row(button_theme3)
    markup.row(button_back_to_categories)
    return markup

def create_back_to_theme_keyboard():
    markup = types.InlineKeyboardMarkup()
    button_back_to_theme = types.InlineKeyboardButton("–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É —Ç–µ–º—ã", callback_data='BackToTheme')
    button_prev_video = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='PrevVideo')
    button_next_video = types.InlineKeyboardButton(f"{bot.current_video_index + 1}/{len(bot.videos)} –í–ø–µ—Ä–µ–¥", callback_data='NextVideo')
    markup.row(button_back_to_theme)
    markup.row(button_prev_video, button_next_video)
    return markup

def create_back_to_theme_keyboard_FAW():
    markup = types.InlineKeyboardMarkup()
    button_back_to_theme = types.InlineKeyboardButton("–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É —Ç–µ–º—ã", callback_data='BackToTheme')
    button_prev_video = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='PrevVideo_f')
    button_next_video = types.InlineKeyboardButton(f"{bot.current_video_index + 1}/{len(bot.videos)} –í–ø–µ—Ä–µ–¥", callback_data='NextVideo_f')
    markup.row(button_back_to_theme)
    markup.row(button_prev_video, button_next_video)
    return markup

def create_favorite_keyboard_MENU2():
    markup = types.InlineKeyboardMarkup()
    button_video = types.InlineKeyboardButton("–í–∏–¥–µ–æüéûÔ∏è", callback_data='Video_f')
    button_back = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='Back')
    markup.row(button_video)
    markup.row(button_back)
    return markup

def create_favorite_keyboard():
    markup = types.InlineKeyboardMarkup()
    button_video = types.InlineKeyboardButton("–í–∏–¥–µ–æüéûÔ∏è", callback_data='Video')
    button_picture = types.InlineKeyboardButton("–ö–∞—Ä—Ç–∏–Ω–∫–∏üåÜ", callback_data='Picture')
    button_back = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='Back')
    markup.row(button_video, button_picture, button_back)
    return markup

while True:
    try:
        bot.polling(none_stop=True)
    except Exception as e:
        print(f"Error: {e}")
